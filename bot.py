import os
import time
import requests
import telebot
from telebot import types
from flask import Flask, request

API_TOKEN = os.getenv("TELEGRAM_TOKEN")
REPLICATE_TOKEN = os.getenv("REPLICATE_API_TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL", "https://retete.onrender.com")

bot = telebot.TeleBot(API_TOKEN)
app = Flask(__name__)

# –í–µ—Ä—Å–∏—è –º–æ–¥–µ–ª–∏ –¥–ª—è –∞–Ω–∏–º–µ-—Å—Ç–∏–ª—è
REPLICATE_MODEL_VERSION = "c1d5b02687df6081c7953c74bcc527858702e8c153c9382012ccc3906752d3ec"

# –£—Å–∏–ª–∏—Ç–µ–ª–∏ –ø—Ä–æ–º—Ç–æ–≤
def enhance_nsfw_female(p):
    return p + ", nude, erotic, sensual, solo, young female, seductive, large breasts, soft skin, masterpiece, ultra detailed, NSFW, anime style"

def enhance_futanari(p):
    return p + ", futanari, shemale, dickgirl, big breasts, penis, nude, erotic pose, solo, highly detailed, NSFW, anime style"

def enhance_femboy(p):
    return p + ", femboy, cute male, feminine face, soft skin, lingerie, erotic, slim waist, NSFW, solo, anime style"

def enhance_shibari(p):
    return p + ", shibari, rope bondage, tied up, detailed knots, erotic ropes, submissive pose, NSFW, cinematic, anime style"

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∏–Ω–æ–Ω–∏–º–æ–≤ –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ (–∞–Ω–∞–ª, –¥–∏–ª–¥–æ, –ø–æ–∑–∞ –∏ —Ç.–¥.)
def build_prompt(text):
    prompt = text.lower()
    additions = []

    # –ê–Ω–∞–ª –∏ —Å–∏–Ω–æ–Ω–∏–º—ã
    if any(x in prompt for x in ["–∞–Ω–∞–ª", "–∞–Ω–∞–ª—å–Ω—ã–π", "anal"]):
        additions.append("anal sex, detailed anal penetration")

    # –î–∏–ª–¥–æ —Å –≤–∞—Ä–∏–∞—Ü–∏—è–º–∏
    if any(x in prompt for x in ["–¥–∏–ª–¥–æ", "–±–æ–ª—å—à–æ–π –¥–∏–ª–¥–æ", "–∫–æ–Ω—Å–∫–∏–π –¥–∏–ª–¥–æ", "dildo", "big dildo", "horse dildo"]):
        additions.append("large dildo, realistic dildo, inserted dildo")

    # –ü–æ–∑–∏—Ü–∏–∏
    if any(x in prompt for x in ["—Ä–∞–∫–æ–º", "–Ω–∞ –∫–æ—Ä—Ç–æ—á–∫–∞—Ö", "—Å–ø–∏–Ω–∞", "–ø–æ–∑–∞", "–ø–æ–∑–∏—Ü–∏—è", "squatting", "doggy style", "on back"]):
        additions.append("specific pose")

    # –í–∏–¥–Ω–æ –∫–∏—Å–∫—É / –≤–ª–∞–≥–∞–ª–∏—â–µ
    if any(x in prompt for x in ["–∫–∏—Å–∫–∞", "–≤–ª–∞–≥–∞–ª–∏—â–µ", "pussy", "vagina"]):
        additions.append("visible vagina, detailed vulva")

    # –†–∞–∑–º–µ—Ä –≥—Ä—É–¥–∏
    if any(x in prompt for x in ["–±–æ–ª—å—à–∞—è –≥—Ä—É–¥—å", "–æ–≥—Ä–æ–º–Ω–∞—è –≥—Ä—É–¥—å", "large breasts", "big boobs"]):
        additions.append("large breasts, full chest")

    # –ü–∏—Ä—Å–∏–Ω–≥
    if any(x in prompt for x in ["–ø–∏—Ä—Å–∏–Ω–≥", "piercing", "nipple piercing", "pierced nipples"]):
        additions.append("nipple piercing")

    # –ß—É–ª–∫–∏
    if any(x in prompt for x in ["—á—É–ª–∫–∏", "stockings", "hosiery"]):
        additions.append("lace stockings, thigh-high stockings")

    # –û–±—ä–µ–¥–∏–Ω—è–µ–º
    additions_text = ", ".join(additions)
    if additions_text:
        prompt += ", " + additions_text

    # –£—Ç–æ—á–Ω–∏–º —Å—Ç–∏–ª—å –∞–Ω–∏–º–µ
    prompt += ", anime style, detailed, high quality, NSFW"
    return prompt

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ —á–µ—Ä–µ–∑ Replicate
def generate_image(prompt):
    url = "https://api.replicate.com/v1/predictions"
    headers = {
        "Authorization": f"Token {REPLICATE_TOKEN}",
        "Content-Type": "application/json"
    }
    data = {
        "version": REPLICATE_MODEL_VERSION,
        "input": {"prompt": prompt}
    }
    response = requests.post(url, headers=headers, json=data)
    if response.status_code == 201:
        prediction = response.json()
        return prediction["urls"]["get"], None
    return None, f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {response.status_code} {response.text}"

# –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Å –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—Ç–∞—Ç—É—Å–∞
def generate_custom_image(message, enhancer):
    prompt = enhancer(message.text)
    bot.send_message(message.chat.id, "üîû –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –ø–æ–¥–æ–∂–¥–∏...")

    status_url, error = generate_image(prompt)
    if error:
        bot.send_message(message.chat.id, error)
        return

    for _ in range(30):  # –£–≤–µ–ª–∏—á–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è
        res = requests.get(status_url, headers={"Authorization": f"Token {REPLICATE_TOKEN}"})
        if res.status_code != 200:
            bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞ —Å—Ç–∞—Ç—É—Å–∞: {res.status_code} {res.text}")
            return
        status = res.json()
        if status.get("status") == "succeeded":
            img = status["output"][0]
            bot.send_photo(message.chat.id, img)
            # –ü–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —É—Å–∏–ª–µ–Ω–∏–µ
            send_enhancement_options(message.chat.id)
            return
        elif status.get("status") == "failed":
            bot.send_message(message.chat.id, "‚ùå –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å.")
            return
        time.sleep(2)
    bot.send_message(message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞ –æ—Ç–≤–µ–¥—ë–Ω–Ω–æ–µ –≤—Ä–µ–º—è.")

# –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—ã–±–æ—Ä–∞ —É—Å–∏–ª–µ–Ω–∏—è
def send_enhancement_options(chat_id):
    markup = types.InlineKeyboardMarkup()
    markup.row(
        types.InlineKeyboardButton("üéÄ –£—Å–∏–ª–µ–Ω–∏–µ –¥–µ–≤—É—à–µ–∫", callback_data="nsfw_female"),
        types.InlineKeyboardButton("‚ößÔ∏è –§—É—Ç–∞–Ω–∞—Ä–∏", callback_data="futanari")
    )
    markup.row(
        types.InlineKeyboardButton("üßë‚Äçüé§ –§–µ–º–±–æ–π", callback_data="femboy"),
        types.InlineKeyboardButton("ü™¢ –®–∏–±–∞—Ä–∏", callback_data="shibari")
    )
    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏ —É—Å–∏–ª–µ–Ω–∏–µ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    mode = call.data
    prompt_msg = {
        "nsfw_female": "üìù –û–ø–∏—à–∏ –¥–µ–≤—É—à–∫—É:",
        "futanari": "üìù –û–ø–∏—à–∏ —Ñ—É—Ç–∞–Ω–∞—Ä–∏-—Å—Ü–µ–Ω—É:",
        "femboy": "üìù –û–ø–∏—à–∏ —Ñ–µ–º–±–æ—è:",
        "shibari": "üìù –û–ø–∏—à–∏ —Å—Ü–µ–Ω—É —Å —à–∏–±–∞—Ä–∏:"
    }.get(mode, "üìù –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ:")

    enhancers = {
        "nsfw_female": enhance_nsfw_female,
        "futanari": enhance_futanari,
        "femboy": enhance_femboy,
        "shibari": enhance_shibari
    }

    msg = bot.send_message(call.message.chat.id, prompt_msg)
    bot.register_next_step_handler(msg, lambda m: generate_custom_image(m, enhancers[mode]))

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    send_enhancement_options(message.chat.id)

# –û–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç - –±–µ–∑ —É—Å–∏–ª–µ–Ω–∏—è
@bot.message_handler(func=lambda m: True)
def handle_prompt(message):
    prompt = build_prompt(message.text)
    bot.send_message(message.chat.id, "üîÅ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —É—á—ë—Ç–æ–º –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤...")
    generate_custom_image(message, lambda _: prompt)

# Flask Webhook
app = Flask(__name__)

@app.route('/', methods=['POST'])
def webhook():
    update = telebot.types.Update.de_json(request.data.decode("utf-8"))
    bot.process_new_updates([update])
    return '', 200

@app.route('/', methods=['GET'])
def index():
    return 'ü§ñ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç'

if __name__ == '__main__':
    bot.remove_webhook()
    bot.set_webhook(WEBHOOK_URL)
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))